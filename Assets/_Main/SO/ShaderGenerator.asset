%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 3acd6fe57257048db802c1c4c2b75248, type: 3}
  m_Name: ShaderGenerator
  m_EditorClassIdentifier: 
  shaderName: TransformProvider
  shaderReference: {fileID: 4800000, guid: d36b7ffba7b1e4d39b4e60e89ae1f03d, type: 3}
  shaderTemplate: uRaymarching/Forward/Standard
  variables:
  - key: Name
    value: TransformProvider
  - key: ObjectShape
    value: CUBE
  - key: RaymarchingShaderDirectory
    value: Assets\uRaymarching\Shaders\Include\Legacy
  - key: RenderType
    value: Opaque
  - key: RenderQueue
    value: Geometry
  conditions:
  - key: ShadowCaster
    value: 1
  - key: FullScreen
    value: 0
  - key: WorldSpace
    value: 1
  - key: FollowObjectScale
    value: 0
  - key: CameraInsideObject
    value: 0
  - key: UseRaymarchingDepth
    value: 1
  - key: FallbackToDiffuse
    value: 1
  - key: Blend
    value: 0
  - key: UseCameraDepthTexture
    value: 0
  - key: DisableViewCulling
    value: 0
  - key: SphericalHarmonicsPerPixel
    value: 1
  - key: ForwardAdd
    value: 1
  - key: FallbackToStandardShader
    value: 0
  - key: UseGrabPass
    value: 0
  blocks:
  - key: Properties
    value: "[Header(Additional Parameters)]\r\n\r\n[Header(Float Parameters)]\r\n_Smooth(\"Smooth\",
      float) = 17.5\r\n    \r\n[Header(Color Parameters)]\r\n_BaseColor(\"Color\",
      Color) = (1.0, 1.0, 1.0, 1.0)\r"
    folded: 0
  - key: DistanceFunction
    value: "// These inverse transform matrices are provided\r\n// from TransformProvider
      script\r\nfloat4x4 _Head;\r\nfloat4x4 _TorsoUpper;\r\nfloat4x4 _TorsoLower;\r\n\r\nfloat4x4
      _LeftArmUpper;\r\nfloat4x4 _LeftArmLower;\r\n\r\nfloat4x4 _RightArmUpper;\r\nfloat4x4
      _RightArmLower;\r\n\r\nfloat4x4 _LeftLegUpper;\r\nfloat4x4 _LeftLegLower;\r\n\r\nfloat4x4
      _RightLegUpper;\r\nfloat4x4 _RightLegLower;\r\n\r\nfloat _Smooth;\r\n\r\n//
      Global Variables\r\n\r\n    float4 headPos;\r\n\r\n    float4 torsoUpperPos;\r\n   
      float4 torsoLowerPos;\r\n\r\n    float4 leftArmUpperPos; \r\n    float4 leftArmLowerPos;\r\n\r\n   
      float4 rightArmUpperPos;\r\n    float4 rightArmLowerPos;\r\n\r\n    float4
      leftLegUpperPos; \r\n    float4 leftLegLowerPos;\r\n\r\n    float4 rightLegUpperPos;\r\n   
      float4 rightLegLowerPos;\r\n\r\n    float head;\r\n\r\n    float torsoUpper;\r\n   
      float torsoLower; \r\n    \r\n    float leftArmUpper;\r\n    float leftArmLower;\r\n   
      \r\n    float rightArmUpper;\r\n    float rightArmLower;\r\n    \r\n    float
      leftLegUpper;\r\n    float leftLegLower;\r\n    \r\n    float rightLegUpper;\r\n   
      float rightLegLower;\r\n\r\n    float result;\r\n\r\ninline float DistanceFunction(float3
      wpos)\r\n{\r\n    headPos = mul(_Head, float4(wpos, 1.0));\r\n    \r\n    torsoUpperPos
      = mul(_TorsoUpper, float4(wpos, 1.0));\r\n    torsoLowerPos = mul(_TorsoLower,
      float4(wpos, 1.0));\r\n    \r\n    leftArmUpperPos = mul(_LeftArmUpper, float4(wpos,
      1.0));\r\n    leftArmLowerPos = mul(_LeftArmLower, float4(wpos, 1.0));\r\n   
      \r\n    rightArmUpperPos = mul(_RightArmUpper, float4(wpos, 1.0));\r\n    rightArmLowerPos
      = mul(_RightArmLower, float4(wpos, 1.0));\r\n    \r\n    leftLegUpperPos =
      mul(_LeftLegUpper, float4(wpos, 1.0));\r\n    leftLegLowerPos = mul(_LeftLegLower,
      float4(wpos, 1.0));\r\n    \r\n    rightLegUpperPos = mul(_RightLegUpper, float4(wpos,
      1.0));\r\n    rightLegLowerPos = mul(_RightLegLower, float4(wpos, 1.0));\r\n\r\n   
      head = Sphere(headPos, 0.1F);\r\n    torsoUpper = Capsule(torsoUpperPos, float3(0,
      0, 0), float3(0, .15, 0), 0.125F);\r\n    torsoLower = Sphere(torsoLowerPos,
      0.16F);\r\n    \r\n    leftArmUpper = Capsule(leftArmUpperPos, float3(0, 0,
      0), float3(0, .15, 0), 0.075F);\r\n    leftArmLower = Capsule(leftArmLowerPos,
      float3(0, 0, 0), float3(0, .15, 0), 0.05F);\r\n    \r\n    rightArmUpper =
      Capsule(rightArmUpperPos, float3(0, 0, 0), float3(0, .15, 0), 0.075F);\r\n   
      rightArmLower = Capsule(rightArmLowerPos, float3(0, 0, 0), float3(0, .15, 0),
      0.05F);\r\n    \r\n    leftLegUpper = Capsule(leftLegUpperPos, float3(0, 0,
      0), float3(0, .125, 0), 0.07F);\r\n    leftLegLower = Capsule(leftLegLowerPos,
      float3(0, 0, 0), float3(0, .125, 0), 0.07F);\r\n    \r\n    rightLegUpper =
      Capsule(rightLegUpperPos, float3(0, 0, 0), float3(0, .125, 0), 0.07F);\r\n   
      rightLegLower = Capsule(rightLegLowerPos, float3(0, 0, 0), float3(0, .125,
      0), 0.07F);\r\n\r\n    result = SmoothMin(torsoUpper, torsoLower, _Smooth);\r\n   
      result = SmoothMin(result, head, _Smooth);\r\n    result = SmoothMin(result,
      torsoUpper, _Smooth);\r\n    result = SmoothMin(result, leftArmUpper, _Smooth);\r\n   
      result = SmoothMin(result, leftArmLower, _Smooth);\r\n    result = SmoothMin(result,
      rightArmUpper, _Smooth);\r\n    result = SmoothMin(result, rightArmLower, _Smooth);\r\n   
      result = SmoothMin(result, leftLegUpper, _Smooth);\r\n    result = SmoothMin(result,
      leftLegLower, _Smooth);\r\n    result = SmoothMin(result, rightLegUpper, _Smooth);\r\n   
      result = SmoothMin(result, rightLegLower, _Smooth);\r\n    \r\n    return result;\r\n}\r"
    folded: 0
  - key: PostEffect
    value: "float4 _BaseColor;\r\n\r\ninline void PostEffect(RaymarchInfo ray, inout
      PostEffectOutput o)\r\n{\r\n    o.Albedo = normalize(_BaseColor);\r\n}\r"
    folded: 0
  constants: {fileID: 11400000, guid: 9c8b2f5a7a56c4e21bee7ca4ccfc6640, type: 2}
  basicFolded: 0
  conditionsFolded: 0
  variablesFolded: 0
  materialsFolded: 0
  constantsFolded: 0
