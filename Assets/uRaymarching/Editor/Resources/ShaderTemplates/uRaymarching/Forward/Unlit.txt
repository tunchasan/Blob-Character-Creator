Shader "Raymarching/<Name>"
{

@constants uRaymarching/Constants/uRaymarching_Default_Constants_Legacy

Properties
{
    [Header(Base)]
    _Color("Color", Color) = (1.0, 1.0, 1.0, 1.0)

    [Header(Pass)]
    [Enum(UnityEngine.Rendering.CullMode)] _Cull("Culling", Int) = 2
@if Blend : false
    [Enum(UnityEngine.Rendering.BlendMode)] _BlendSrc("Blend Src", Float) = 5 
    [Enum(UnityEngine.Rendering.BlendMode)] _BlendDst("Blend Dst", Float) = 10
@endif
    [Toggle][KeyEnum(Off, On)] _ZWrite("ZWrite", Float) = 1

    [Header(Raymarching)]
    _Loop("Loop", Range(1, 100)) = 30
    _MinDistance("Minimum Distance", Range(0.001, 0.1)) = 0.01
    _DistanceMultiplier("Distance Multiplier", Range(0.001, 2.0)) = 1.0
@if ShadowCaster : true
    _ShadowLoop("Shadow Loop", Range(1, 100)) = 10
    _ShadowMinDistance("Shadow Minimum Distance", Range(0.001, 0.1)) = 0.01
    _ShadowExtraBias("Shadow Extra Bias", Range(0.0, 0.1)) = 0.01
@endif
    [PowerSlider(10.0)] _NormalDelta("NormalDelta", Range(0.00001, 0.1)) = 0.0001

@block Properties
// _Color2("Color2", Color) = (1.0, 1.0, 1.0, 1.0)
@endblock
}

SubShader
{

Tags
{
    "RenderType" = "<RenderType=Opaque|Transparent|TransparentCutout|Background|Overlay>"
    "Queue" = "<RenderQueue=Geometry|AlphaTest|Transparent|Background|Overlay|Geometry+1|Geometry-1>"
    "DisableBatching" = "True"
}

Cull [_Cull]

CGINCLUDE

@if FullScreen : false
#define FULL_SCREEN
@endif

@if WorldSpace : false
#define WORLD_SPACE
@endif

@if FollowObjectScale : false
#define OBJECT_SCALE
@endif

#define OBJECT_SHAPE_<ObjectShape=CUBE|NONE>

@if CameraInsideObject : false
#define CAMERA_INSIDE_OBJECT
@endif

@if UseRaymarchingDepth : true
#define USE_RAYMARCHING_DEPTH
@endif

@if UseCameraDepthTexture : true
#define USE_CAMERA_DEPTH_TEXTURE
@endif

@if DisableViewCulling : false 
#define DISABLE_VIEW_CULLING
@endif

#define DISTANCE_FUNCTION DistanceFunction
#define POST_EFFECT PostEffect
#define PostEffectOutput float4

#include "<RaymarchingShaderDirectory>/Common.cginc"

@block DistanceFunction
inline float DistanceFunction(float3 pos)
{
    return Sphere(pos, 0.5);
}
@endblock

@block PostEffect
inline void PostEffect(RaymarchInfo ray, inout PostEffectOutput o)
{
}
@endblock

ENDCG

@if UseGrabPass : false
GrabPass {}
@endif

Pass
{
    Tags { "LightMode" = "ForwardBase" }

@if Blend : false
    Blend [_BlendSrc] [_BlendDst]
@endif
    ZWrite [_ZWrite]

    CGPROGRAM
    #include "<RaymarchingShaderDirectory>/ForwardBaseUnlit.cginc"
    #pragma target 3.0
    #pragma vertex Vert
    #pragma fragment Frag
    #pragma multi_compile_instancing
    #pragma multi_compile_fog
    #pragma multi_compile_fwdbase
    ENDCG
}

@if ShadowCaster
Pass
{
    Tags { "LightMode" = "ShadowCaster" }

    CGPROGRAM
    #include "<RaymarchingShaderDirectory>/ShadowCaster.cginc"
    #pragma target 3.0
    #pragma vertex Vert
    #pragma fragment Frag
    #pragma fragmentoption ARB_precision_hint_fastest
    #pragma multi_compile_shadowcaster
    ENDCG
}
@endif

}

@if FallbackToStandardShader : true
Fallback "Raymarching/Fallbacks/StandardSurfaceShader"
@else
Fallback Off
@endif

CustomEditor "uShaderTemplate.MaterialEditor"

}